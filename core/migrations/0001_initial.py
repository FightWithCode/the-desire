# Generated by Django 2.2 on 2020-10-28 14:09

import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BillingAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(blank=True, max_length=100, null=True, verbose_name='First Name')),
                ('lname', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('email', models.CharField(blank=True, max_length=50, null=True, verbose_name='Email Id')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Phone Number')),
                ('street_address', models.CharField(blank=True, max_length=100)),
                ('apartment_address', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=100)),
                ('address_type', models.CharField(blank=True, choices=[('B', 'Billing')], max_length=1)),
                ('default', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, max_length=1, null=True)),
                ('specialInstructions', models.CharField(blank=True, max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'BillingAddresses',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=15)),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='HomeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('badge_title', models.CharField(blank=True, max_length=1000, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Id')),
                ('title', models.CharField(max_length=100, verbose_name='Item Name')),
                ('price', models.FloatField()),
                ('brandName', models.CharField(blank=True, max_length=255, null=True)),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('label', models.CharField(choices=[('New', 'New'), ('Sale', 'Sale'), ('Promotion', 'Promotion')], max_length=50)),
                ('slug', models.SlugField()),
                ('stock_no', models.CharField(max_length=10)),
                ('description_short', tinymce.models.HTMLField(blank=True, verbose_name='Product Description')),
                ('description_long', tinymce.models.HTMLField(blank=True, verbose_name='Shipping Details')),
                ('image', models.ImageField(upload_to='')),
                ('is_active', models.BooleanField(default=True)),
                ('has_variations', models.BooleanField(default=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption1', models.CharField(max_length=100)),
                ('caption2', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=100)),
                ('image', models.ImageField(help_text='Size: 1920x570', upload_to='')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subcription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('validity', models.IntegerField(blank=True, null=True)),
                ('entries', models.IntegerField(blank=True, null=True)),
                ('is_booster', models.BooleanField(default=False)),
                ('has_priority_support', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, choices=[('Customer', 'Customer'), ('Seller', 'Seller')], max_length=100, null=True)),
                ('testimonial', models.CharField(blank=True, max_length=1000, null=True)),
                ('display', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TaxName', models.CharField(max_length=50)),
                ('ValueType', models.CharField(choices=[('In Rupees', 'Rs'), ('In Percentage', 'Percent')], max_length=50)),
                ('TaxValue', models.FloatField()),
                ('categoryId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Category')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Id')),
                ('contact_number', models.CharField(max_length=255)),
                ('alt_contact_number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_service_provider', models.BooleanField(default=False)),
                ('saved', models.BooleanField(default=False)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_details_saved', models.BooleanField(default=False)),
                ('account_number', models.CharField(blank=True, max_length=255, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('entries_remaining', models.IntegerField(blank=True, default=0, null=True)),
                ('days_valid', models.IntegerField(blank=True, default=0, null=True)),
                ('subs_date', models.DateTimeField(blank=True, null=True)),
                ('booster_date', models.DateTimeField(blank=True, null=True)),
                ('booster', models.ForeignKey(blank=True, limit_choices_to={'is_booster': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.Subcription')),
                ('subcription', models.ForeignKey(blank=True, limit_choices_to={'is_booster': False}, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Subcription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_charge_id', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=200, null=True)),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=1)),
                ('price', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, default=0, null=True, verbose_name='Service Charges')),
                ('totalPrice', models.FloatField(blank=True, default=0, null=True)),
                ('ref_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Reference ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('ordered_date', models.DateTimeField(blank=True, null=True)),
                ('being_delivered', models.BooleanField(default=False, verbose_name='Order Delivered')),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('order_rejected', models.BooleanField(default=False, verbose_name='Order Cancelled')),
                ('order_placed', models.BooleanField(default=False, verbose_name='Order Accepted')),
                ('seller_msg', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Reason')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='core.BillingAddress', verbose_name='Delivery Address')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Item')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Payment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='seller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Profile'),
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=50)),
                ('lname', models.CharField(max_length=50)),
                ('mobileno', models.IntegerField()),
                ('emailId', models.EmailField(max_length=50)),
                ('subject', models.CharField(max_length=500)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('ip', models.CharField(blank=True, max_length=20)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Comment Id')),
                ('subject', models.CharField(blank=True, max_length=50)),
                ('email', models.CharField(blank=True, max_length=50)),
                ('comment', models.CharField(blank=True, max_length=250)),
                ('rate', models.IntegerField(default=1)),
                ('ip', models.CharField(blank=True, max_length=20)),
                ('status', models.CharField(choices=[('New', 'New'), ('True', 'True'), ('False', 'False')], default='False', max_length=10)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_attach', models.FileField(blank=True, null=True, upload_to='', validators=[core.validators.validate_file_size])),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Item')),
            ],
        ),
    ]
